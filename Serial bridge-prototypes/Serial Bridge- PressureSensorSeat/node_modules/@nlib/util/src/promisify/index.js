const PROMISIFIED = Symbol('promisified');
exports.promisify = function promisify(
	original,
	{
		getError = (results) => results[0],
		getResult = (results) => results[1],
	} = {}
) {
	if (original[PROMISIFIED]) {
		return original;
	}
	/** @this Object */
	function promisified(...args) {
		return new Promise((resolve, reject) => {
			original.call(this, ...args, (...results) => {
				const error = getError && getError(results);
				if (error) {
					reject(error);
				} else {
					resolve(getResult(results));
				}
			});
		});
	}
	Object.setPrototypeOf(promisified, Object.getPrototypeOf(original));
	promisified[PROMISIFIED] = true;
	return promisified;
};
