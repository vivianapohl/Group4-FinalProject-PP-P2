module.exports = function replacementFunction(replacement) {
	if (typeof replacement === 'function') {
		return replacement;
	}
	return (...p) => {
		const match = p.shift();
		const string = p.pop();
		const offset = p.pop();
		return replacement.replace(/\$(\$|&|`|'|\d{1,2})/g, (dollar, pattern) => {
			switch (pattern) {
			case '$':
				return '$';
			case '&':
				return match;
			case '`':
				return string.slice(0, offset);
			case '\'':
				return string.slice(offset + match.length);
			default:
			}
			let captured = p[parseInt(pattern, 10) - 1];
			if (typeof captured !== 'undefined') {
				return captured;
			}
			captured = p[parseInt(pattern.slice(0, 1), 10) - 1];
			if (typeof captured !== 'undefined') {
				return `${captured}${pattern.slice(1)}`;
			}
			return dollar;
		});
	};
};
