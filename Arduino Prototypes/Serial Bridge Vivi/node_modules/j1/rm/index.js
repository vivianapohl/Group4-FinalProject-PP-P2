const path = require('path');
const fs = require('fs');
const promisify = require('../promisify');
const unlink = promisify(fs.unlink, fs);
const _rmdir = promisify(fs.rmdir, fs);
const readdir = promisify(fs.readdir, fs);

function rmdir(dirPath) {
	return _rmdir(dirPath)
		.then(
			() => {
				return dirPath;
			},
			(error) => {
				switch (error.code) {
					case 'ENOENT':
						return dirPath;
					case 'ENOTEMPTY':
						return readdir(dirPath)
							.then(
								(files) => {
									return Promise.all(files.map((name) => {
										return rm(path.join(dirPath, name));
									}))
										.then(() => {
											return rm(dirPath);
										});
								}
							);
				}
				throw error;
			}
		);
}

function rm(filePath) {
	return unlink(filePath)
		.then(
			() => {
				return filePath;
			},
			(error) => {
				switch (error.code) {
					case 'ENOENT':
						return filePath;
					case 'EISDIR':
						return rmdir(filePath);
				}
				throw error;
			}
		);
}

rm.rmdir = rmdir;

module.exports = rm;
