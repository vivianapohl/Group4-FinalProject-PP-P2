const assert = require('assert');
const net = require('net');
const listen = require('..');
const promisify = require('../../promisify');

describe('listen', function () {

	it('should listen a port', () => {
		return listen(net.createServer(), 0x400)
			.then((server) => {
				const port = server.address().port;
				assert.equal(0x400 <= port && port <= 0xffff, true);
				return promisify(server.close, server)();
			});
	});

	it('should fail to listen 0x10000', () => {
		return listen(net.createServer(), 0x10000)
			.then(() => {
				throw new Error('Resolved unexpectedly');
			})
			.catch((error) => {
				assert.equal(error.name, 'RangeError');
			});
	});

	it('should get a free port number', function () {
		let server1;
		return listen(net.createServer(), 0x400)
			.then((server) => {
				server1 = server;
				return listen(net.createServer(), server1.address().port);
			})
			.then((server2) => {
				assert.equal(server1.address().port !== server2.address().port, true);
				return Promise.all([
					promisify(server1.close, server1)(),
					promisify(server2.close, server2)()
				]);
			});
	});

});
