const assert = require('assert');
const Labeler = require('..').Labeler;

describe('labeler', function () {

	it('should have a length', function () {
		const labeler = new Labeler();
		assert.equal(labeler.length, 0);
		labeler.label('test');
		assert.equal(labeler.length, 1);
	});

	it('should increment the length', function () {
		const labeler = new Labeler();
		labeler.label('test');
		assert.equal(labeler.length, 1);
	});

	it('should save its length', function () {
		const labeler = new Labeler();
		labeler.label('test');
		labeler.length = 10;
		assert.equal(labeler.length, 1);
	});

	it('should get its contents', function () {
		const labeler = new Labeler();
		const data = 'test004';
		const index = labeler.label(data);
		assert.equal(labeler.get(index), data);
	});

	it('should prevent duplication', function () {
		const labeler = new Labeler();
		const data = 'test005';
		assert.equal(labeler.label(data), labeler.label(data));
	});

	it('should have toString()', function () {
		const labeler = new Labeler();
		const data1 = 'toString-1';
		const data2 = 'toString-2';
		labeler.label(data1);
		labeler.label(data1);
		labeler.label(data2);
		labeler.label(data2);
		assert.equal(labeler.toString(), `0: ${data1}\n1: ${data2}`);
	});

});
